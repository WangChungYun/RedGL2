[
  {
    "code": "PROPERTY",
    "title": "bloomStrength",
    "description": "\n\t 블룸 강도\n\t 기본값 : 1.2\n\t min : 0\n ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "blur",
    "description": "\n\t blur 정도.\n\t 기본값 : 20\n\t min : 0\n ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "exposure",
    "description": "\n\t 확산 강도.\n\t 기본값 : 1\n\t min : 0\n ",
    "return": "Number"
  },
  {
    "constructorYn": true,
    "title": "RedFilter_Bloom",
    "description": "\n\t Bloom 이펙트\n\t postEffectManager.addEffect( effect Instance ) 로 추가.\n ",
    "params": {
      "redGL": [
        {
          "type": "RedGL"
        }
      ]
    },
    "extends": [
      "RedBaseFilter",
      "RedBaseMaterial"
    ],
    "demo": "../example/postEffect/bloom/RedFilter_Bloom.html",
    "example": "\n          var effect;\n          effect = RedFilter_Bloom(RedGL Instance); // 포스트이펙트 생성\n          // postEffectManager는 RedView 생성시 자동생성됨.\n          (RedView Instance)['postEffectManager'].addEffect(effect); // 뷰에 이펙트 추가\n ",
    "return": "RedFilter_Bloom Instance"
  },
  {
    "code": "PROPERTY",
    "title": "threshold",
    "description": "\n\t 최소 유효값\n\t 기본값 : 75\n\t min : 0\n ",
    "return": "Number"
  }
]