[
  {
    "title": "addLight",
    "code": "METHOD",
    "description": "\n\t 라이트 추가 매서드.\n\t RedBaseLight 확장객체만 등록가능. ( RedAmbientLight, RedDirectionalLight, RedPointLight ).\n\t 하드웨어 상황에 따른 라이트별 허용갯수까지만 등록가능.\n\t RedSystemShaderCode.MAX_DIRECTIONAL_LIGHT\n\t RedSystemShaderCode.MAX_POINT_LIGHT\n ",
    "params": {
      "light": [
        {
          "type": "RedBaseLight"
        }
      ]
    },
    "example": "\n             var testScene;\n             var testLight;\n             testScene = RedScene(RedGL Instance); // RedScene 생성 설정\n             testLight = RedDirectionalLight(RedGL Instance); // 라이트 생성\n             testScene.addLight( testLight ); // 라이트 추가\n          ",
    "return": "void"
  },
  {
    "code": "PROPERTY",
    "title": "axis",
    "description": "\n\t axis get/set\n ",
    "example": "\n          var testScene;\n          var testAxis;\n          testScene = RedScene(RedGL Instance); // RedScene 생성 설정\n          testAxis = RedAxis(RedGL Instance); // axis 생성\n          testScene.axis = testAxis; // axis 설정\n       ",
    "return": "RedAxis Instance"
  },
  {
    "code": "PROPERTY",
    "title": "backgroundColor",
    "description": "\n\t 배경 컬러설정.\n\t 알파설정은 불가능\n ",
    "params": {
      "hex": [
        {
          "type": "hex"
        },
        "ex) #fff, #ffffff"
      ]
    },
    "example": "\n          var testScene;\n          testScene = RedScene(RedGL Instance); // RedScene 생성\n          testScene.backgroundColor = '#fff';\n       ",
    "return": "hex"
  },
  {
    "code": "PROPERTY",
    "title": "children",
    "description": "자식 리스트",
    "return": "Array"
  },
  {
    "code": "PROPERTY",
    "title": "fogColor",
    "description": "\n     fog 컬러값.\n\t 초기값 : #ffffff\n ",
    "example": "\n          var testScene;\n          testScene = RedScene(RedGL Instance); // RedScene 생성\n          testScene.fogColor = '#ffffff';\n       ",
    "return": "hex"
  },
  {
    "code": "PROPERTY",
    "title": "fogDensity",
    "description": "\n\t fog 농도.\n\t 초기값 : 0.5\n ",
    "example": "\n          var testScene;\n          testScene = RedScene(RedGL Instance); // RedScene 생성\n          testScene.fogDensity = 0.5;\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "fogDistance",
    "description": "\n\t fog 가시거리.\n\t 초기값 : 25.0\n ",
    "example": "\n          var testScene;\n          testScene = RedScene(RedGL Instance); // RedScene 생성\n          testScene.fogDistance = 50;\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "grid",
    "description": "\n\t 그리드 get/set\n ",
    "example": "\n          var testScene;\n          var testGrid;\n          testScene = RedScene(RedGL Instance); // RedScene 생성 설정\n          testGrid = RedGrid(RedGL Instance); // 그리드 생성\n          testScene.grid = testGrid; // 그리드 설정\n       ",
    "return": "RedGrid Instance"
  },
  {
    "code": "PROPERTY",
    "title": "mouseManager",
    "description": "\n\t 마우스 이벤트 매니저.\n\t RedScene Instance생성시 자동생성.\n ",
    "return": "RedMouseEventManager Instance"
  },
  {
    "constructorYn": true,
    "title": "RedScene",
    "description": "\n    RedScene Instance 생성자.\n    장면 구성의 기본단위.\n    RedBaseObject3D 확장 객체등을 자식으로 입력하거나 fog 등을 설정 할 수 있다.\n ",
    "params": {
      "redGL": [
        {
          "type": "RedGL Instance"
        }
      ],
      "backgroundColor": [
        {
          "type": "hex"
        },
        "초기값 #000000"
      ]
    },
    "example": "\n          var testScene;\n          testScene = RedScene(RedGL Instance); // RedScene 생성 설정\n          testScene.useBackgroundColor = true; // backgroundColor 사용여부 설정\n          testScene.backgroundColor = '#fff; // backgroundColor (hex) 설정\n          testScene.useFog = true; // fog 사용여부 설정\n          testScene.fogDensity = 0.5; // fog 농도 설정\n          testScene.fogDistance = 25; // fog 가시거리 설정\n          testScene.fogColor = '#fff; // fog 컬러 설정\n ",
    "demo": "../example/etc/RedScene.html",
    "extends": [
      "RedBaseContainer"
    ],
    "return": "RedScene Instance"
  },
  {
    "title": "removeLight",
    "code": "METHOD",
    "description": "\n\t 라이트 제거 매서드.\n\t RedBaseLight 확장객체만 등록가능. ( RedAmbientLight, RedDirectionalLight, RedPointLight )\n ",
    "params": {
      "light": [
        {
          "type": "RedBaseLight"
        }
      ]
    },
    "example": "\n             var testScene;\n             var testLight;\n             testScene = RedScene(RedGL Instance); // RedScene 생성 설정\n             testLight = RedDirectionalLight(RedGL Instance); // 라이트 생성\n             testScene.addLight( testLight ); // 라이트 추가\n             testScene.removeLight( testLight ); // 라이트 제거\n          ",
    "return": "void"
  },
  {
    "title": "removeLightAll",
    "code": "METHOD",
    "description": "\n\t 전체 라이트 제거 매서드.\n ",
    "example": "\n             var testScene;\n             var testLight;\n             testScene = RedScene(RedGL Instance); // RedScene 생성 설정\n             testScene.addLight( RedAmbientLight(RedGL Instance); ); // 라이트 추가\n             testScene.addLight( RedDirectionalLight(RedGL Instance); ); // 라이트 추가\n             testScene.addLight( RedPointLight(RedGL Instance); ); // 라이트 추가\n             testScene.removeLightAll(); // 라이트 제거\n          ",
    "return": "void"
  },
  {
    "code": "PROPERTY",
    "title": "shadowManager",
    "description": "\n\t 그림자 매니저.\n\t RedScene Instance생성시 자동생성.\n ",
    "return": "RedShadowManager Instance"
  },
  {
    "code": "PROPERTY",
    "title": "skyBox",
    "description": "\n\t skyBox get/set\n ",
    "example": "\n          var testScene;\n          var testSkyBox;\n          testScene = RedScene(RedGL Instance); // RedScene 생성 설정\n          testSkyBox = RedSkyBox(RedGL Instance, srcList); // skyBox 생성\n          testScene.skyBox = testSkyBox; // skyBox 추가\n       ",
    "return": "RedSkyBox Instance"
  },
  {
    "code": "PROPERTY",
    "title": "useBackgroundColor",
    "description": "\n\t backgroundColor 사용여부.\n\t 초기값 : true\n ",
    "example": "\n          var testScene;\n          testScene = RedScene(RedGL Instance); // RedScene 생성\n          testScene.useBackgroundColor = true;\n       ",
    "return": "Boolean"
  },
  {
    "code": "PROPERTY",
    "title": "useFog",
    "description": "\n\t fog 사용여부\n\t 초기값 : true\n ",
    "example": "\n          var testScene;\n          testScene = RedScene(RedGL Instance); // RedScene 생성\n          testScene.fog = true;\n       ",
    "return": "Boolean"
  }
]